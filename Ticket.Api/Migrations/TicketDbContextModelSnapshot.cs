// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ticket.Api.DAL;

#nullable disable

namespace Ticket.Api.Migrations
{
    [DbContext(typeof(TicketDbContext))]
    partial class TicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Ticket.Api.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__71ABD087B375C419");

                    b.HasIndex("ConfiguracionId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Clave = "xtZTnA23",
                            ConfiguracionId = 13,
                            Nombres = "Samuel"
                        },
                        new
                        {
                            ClienteId = 2,
                            Clave = "atDt23",
                            ConfiguracionId = 13,
                            Nombres = "Rafa"
                        },
                        new
                        {
                            ClienteId = 3,
                            Clave = "mnQOJv23",
                            ConfiguracionId = 13,
                            Nombres = "Jeison"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Configuraciones", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorSchemeIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Theme")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConfiguracionId");

                    b.ToTable("Configuraciones");

                    b.HasData(
                        new
                        {
                            ConfiguracionId = 1,
                            ColorSchemeIndex = 0,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 2,
                            ColorSchemeIndex = 1,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 3,
                            ColorSchemeIndex = 2,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 4,
                            ColorSchemeIndex = 3,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 5,
                            ColorSchemeIndex = 4,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 6,
                            ColorSchemeIndex = 5,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 7,
                            ColorSchemeIndex = 0,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 8,
                            ColorSchemeIndex = 1,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 9,
                            ColorSchemeIndex = 2,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 10,
                            ColorSchemeIndex = 3,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 11,
                            ColorSchemeIndex = 4,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 12,
                            ColorSchemeIndex = 5,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 13,
                            ColorSchemeIndex = 0,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 14,
                            ColorSchemeIndex = 1,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 15,
                            ColorSchemeIndex = 2,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 16,
                            ColorSchemeIndex = 3,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 17,
                            ColorSchemeIndex = 4,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 18,
                            ColorSchemeIndex = 5,
                            Theme = 2
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Estatus", b =>
                {
                    b.Property<int>("EstatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Estatus");

                    b.HasKey("EstatusId")
                        .HasName("PK__Estatus__DE10F58DA375F6EC");

                    b.ToTable("Estatus", (string)null);

                    b.HasData(
                        new
                        {
                            EstatusId = 1,
                            Estado = "Nuevo"
                        },
                        new
                        {
                            EstatusId = 2,
                            Estado = "En proceso"
                        },
                        new
                        {
                            EstatusId = 3,
                            Estado = "Cerrado"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Prioridades", b =>
                {
                    b.Property<int>("PrioridadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prioridad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("PrioridadId")
                        .HasName("PK__Priorida__3939172E0518F8F3");

                    b.ToTable("Prioridades");

                    b.HasData(
                        new
                        {
                            PrioridadId = 1,
                            Prioridad = "Baja"
                        },
                        new
                        {
                            PrioridadId = 2,
                            Prioridad = "Normal"
                        },
                        new
                        {
                            PrioridadId = 3,
                            Prioridad = "Media"
                        },
                        new
                        {
                            PrioridadId = 4,
                            Prioridad = "Alta"
                        },
                        new
                        {
                            PrioridadId = 5,
                            Prioridad = "Emergencia"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Respuestas", b =>
                {
                    b.Property<int>("RespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RespuestaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TicketId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("Ticket.Api.Models.Sistemas", b =>
                {
                    b.Property<int>("SistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sistema")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Sistema");

                    b.HasKey("SistemaId")
                        .HasName("PK__Sistemas__4C36BB868F17E7A9");

                    b.ToTable("Sistemas");

                    b.HasData(
                        new
                        {
                            SistemaId = 1,
                            Sistema = "Auto System Gym"
                        },
                        new
                        {
                            SistemaId = 2,
                            Sistema = "Auto System Office"
                        },
                        new
                        {
                            SistemaId = 3,
                            Sistema = "Auto System Finanzas"
                        },
                        new
                        {
                            SistemaId = 4,
                            Sistema = "Auto System Ventas"
                        },
                        new
                        {
                            SistemaId = 5,
                            Sistema = "Auto System Produccion"
                        },
                        new
                        {
                            SistemaId = 6,
                            Sistema = "Auto System Analyzer"
                        },
                        new
                        {
                            SistemaId = 7,
                            Sistema = "Auto System Dealer"
                        },
                        new
                        {
                            SistemaId = 8,
                            Sistema = "Auto System Education"
                        },
                        new
                        {
                            SistemaId = 9,
                            Sistema = "Auto System Restaurant"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especificaciones")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<int>("EstatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinalizado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrioridadId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SistemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TicketId")
                        .HasName("PK__Tickets__712CC6070A90FFD9");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("PrioridadId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("Ticket.Api.Models.Tipos", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Tipo");

                    b.HasKey("TipoId")
                        .HasName("PK__Tipos__97099EB7224F755C");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            TipoId = 1,
                            Tipo = "Agregar opcion nueva"
                        },
                        new
                        {
                            TipoId = 2,
                            Tipo = "Soporte sobre opcion existente"
                        },
                        new
                        {
                            TipoId = 3,
                            Tipo = "Instalacion de software"
                        },
                        new
                        {
                            TipoId = 4,
                            Tipo = "Solicitud de visita"
                        },
                        new
                        {
                            TipoId = 5,
                            Tipo = "Solicitud de entrenamiento"
                        },
                        new
                        {
                            TipoId = 6,
                            Tipo = "Soporte de hardware"
                        },
                        new
                        {
                            TipoId = 7,
                            Tipo = "Otros"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Clientes", b =>
                {
                    b.HasOne("Ticket.Api.Models.Configuraciones", "Configuracion")
                        .WithMany()
                        .HasForeignKey("ConfiguracionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Configuracion");
                });

            modelBuilder.Entity("Ticket.Api.Models.Respuestas", b =>
                {
                    b.HasOne("Ticket.Api.Models.Clientes", "Cliente")
                        .WithMany("Respuestas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket.Api.Models.Tickets", "Ticket")
                        .WithMany("Respuestas")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.HasOne("Ticket.Api.Models.Clientes", "Cliente")
                        .WithMany("Tickets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket.Api.Models.Estatus", "Estatus")
                        .WithMany()
                        .HasForeignKey("EstatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket.Api.Models.Prioridades", "Prioridad")
                        .WithMany()
                        .HasForeignKey("PrioridadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket.Api.Models.Sistemas", "Sistema")
                        .WithMany("Tickets")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket.Api.Models.Tipos", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estatus");

                    b.Navigation("Prioridad");

                    b.Navigation("Sistema");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Ticket.Api.Models.Clientes", b =>
                {
                    b.Navigation("Respuestas");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Sistemas", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
